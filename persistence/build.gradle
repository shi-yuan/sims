apply plugin: 'java'

buildscript {
    dependencies {
        classpath "com.mysema.querydsl:querydsl-sql-codegen:3.6.0"
        classpath 'org.apache.commons:commons-dbcp2:2.0.1'
        classpath 'mysql:mysql-connector-java:5.1.31'
    }
}

sourceSets {
    main.java.srcDirs getGeneratedSrcPath()
}

configurations {
    mysqlDriver
}

dependencies {
    compile "org.springframework:spring-jdbc:$springVersion"
    compile "org.springframework:spring-context:$springVersion"

    compile "com.mysema.querydsl:querydsl-sql:3.6.0"
    compile "com.mysema.querydsl:querydsl-sql-codegen:3.6.0"

    runtime 'org.apache.commons:commons-dbcp2:2.0.1'
    runtime 'mysql:mysql-connector-java:5.1.31'
    mysqlDriver 'mysql:mysql-connector-java:5.1.31'
}

import com.mysema.query.codegen.BeanSerializer
import com.mysema.query.sql.codegen.MetaDataExporter
import groovy.sql.Sql

task generateQuerydsl() {
    // Load config from properties
    Properties properties = new Properties();
    FileReader reader;
    try {
        reader = new FileReader("$rootDir/web/src/main/resources/META-INF/application.properties");
        properties.load(reader);
    }
    catch (Exception e) {
        e.printStackTrace();
        return;
    }
    finally {
        if (reader != null) {
            reader.close();
        }
    }

    // Load MySQL Driver
    configurations.mysqlDriver.each { file ->
        gradle.class.classLoader.addURL(file.toURI().toURL());
    }

    // Create classes for Querydsl
    String url = properties.get("jdbc.url");
    String username = properties.get("jdbc.username");
    String password = properties.get("jdbc.password");
    String driver = properties.get("jdbc.driverClassName");
    def sql = Sql.newInstance(url, username, password, driver);
    MetaDataExporter exporter = new MetaDataExporter();
    exporter.setPackageName('com.sims.persistence');
    exporter.setTargetFolder(getGeneratedSrcPath());
    exporter.setBeanSerializer(new BeanSerializer());
    exporter.export(sql.getConnection().getMetaData());
}

def getGeneratedSrcPath() {
    new File(String.format("$projectDir%ssrc%sgenerated%sjava", File.separator, File.separator, File.separator))
}
